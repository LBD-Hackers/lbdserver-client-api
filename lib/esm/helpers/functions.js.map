{"version":3,"file":"functions.js","names":["N3","require","DataFactory","namedNode","literal","defaultGraph","quad","variable","translate","toSparql","extract","jsonld","uri","Object","assign","filter","i","prefixes","inference","myEngine","registries","fetch","store","Promise","resolve","reject","start","Date","q","quadStream","queryQuads","sources","on","res","subject","id","predicate","value","object","addQuad","err","duration","getTime","console","log","streamToString","stream","chunks","chunk","push","Buffer","from","length","concat","toString","query","options","asStream","variables","mutateQuery","queryEngine","QueryEngine","s","result","data","resultToString","JSON","parse","findLowerLevel","obj","type","bgp","input","translation","usedVariables","Set","aliasNumber","aliases","pattern","patterns","item","keys","termType","has","newVName","newV","add","forEach","alias","newPattern","Array"],"sources":["../../../src/helpers/functions.ts"],"sourcesContent":["import {QueryEngine} from '@comunica/query-sparql'\r\nconst N3 = require('n3');\r\nconst { DataFactory } = N3;\r\nconst { namedNode, literal, defaultGraph, quad, variable } = DataFactory;\r\nconst {translate, toSparql} = require(\"sparqlalgebrajs\")\r\n\r\nfunction extract(jsonld: object[], uri: string) {\r\n  return Object.assign({}, ...jsonld.filter((i) => i[\"@id\"] === uri));\r\n}\r\n\r\nconst prefixes = `\r\nprefix owl: <http://www.w3.org/2002/07/owl#> \r\nprefix beo: <http://pi.pauwel.be/voc/buildingelement#>\r\nprefix props: <http://example.org/props#> \r\nprefix lbds: <https://w3id.org/lbdserver#>\r\nprefix schema: <http://schema.org/>\r\n`\r\n\r\nfunction inference(myEngine, { registries, fetch, store }): Promise<void> {\r\n  return new Promise(async (resolve, reject) => {\r\n    const start = new Date()\r\n      const q = prefixes + `\r\n      CONSTRUCT {\r\n       ?s1 owl:sameAs ?s2 .\r\n       ?s2 owl:sameAs ?s1 .\r\n      } WHERE {\r\n          {?concept1 lbds:hasReference/lbds:hasIdentifier/<https://w3id.org/lbdserver#value> ?s1 .\r\n          ?concept2 lbds:hasReference/lbds:hasIdentifier/<https://w3id.org/lbdserver#value> ?s2 .\r\n          ?concept1 owl:sameAs ?concept2 .} UNION {\r\n            ?concept1 lbds:hasReference/lbds:hasIdentifier/<https://w3id.org/lbdserver#value> ?s1, ?s2 .\r\n          }\r\n          FILTER(isIRI(?s1) && isIRI(?s2))\r\n          FILTER(?s1 != ?s2)\r\n      }`\r\n      const quadStream = await myEngine.queryQuads(q, {\r\n          sources: registries,\r\n          fetch\r\n      });\r\n\r\n      quadStream.on('data', (res) => {\r\n        // console.log('res.subject, res.object.id', res.subject.id, res.object.id)\r\n            const q = quad(\r\n                namedNode(res.subject.id),\r\n                namedNode(res.predicate.value),\r\n                namedNode(res.object.id),\r\n                defaultGraph()\r\n            )\r\n            store.addQuad(q)\r\n          \r\n\r\n      });\r\n\r\n      quadStream.on('error', (err) => {\r\n        reject(err)\r\n    });\r\n\r\n      quadStream.on('end', () => {\r\n        const duration = new Date().getTime() - start.getTime()\r\n        console.log('duration inference', duration)\r\n          resolve()\r\n      })\r\n  })\r\n}\r\n\r\nfunction streamToString (stream): Promise<string> {\r\n  const chunks = [];\r\n  return new Promise((resolve, reject) => {\r\n    stream.on('data', (chunk) => {\r\n      chunks.push(Buffer.from(chunk))\r\n      return\r\n    });\r\n    stream.on('error', (err) => {\r\n      console.log('error', err);\r\n      reject(err)\r\n    });\r\n    stream.on('end', () => {\r\n      console.log('end')\r\n      if (chunks.length > 0) {resolve(Buffer.concat(chunks).toString('utf8'))}\r\n      else {\r\n        reject(\"could not find length\")\r\n      }\r\n    });\r\n  })\r\n\r\n}\r\n\r\nasync function query(q, options) {\r\n      let { sources, fetch, store, asStream} = options\r\n      const {query, variables } = await mutateQuery(q)\r\n\r\n      // const newQ = prefixes + \"Select * where {?s1 owl:sameAs ?s2} \"\r\n      let queryEngine = new QueryEngine();\r\n      // if (!store) store = new N3.Store();\r\n      \r\n      // await inference(myEngine, { registries, fetch, store })\r\n      const s: any = [...sources]\r\n      const result = await queryEngine.query(query, { sources: s , fetch })\r\n      const { data } = await queryEngine.resultToString(result);\r\n      if (asStream) {\r\n          return data\r\n      } else {\r\n          return JSON.parse(await streamToString(data))\r\n      }\r\n}\r\n\r\nfunction findLowerLevel(obj, variables) {\r\n  if (!variables) variables = obj.variables\r\n  if (obj.type === \"bgp\") {\r\n      return {bgp: obj, variables}\r\n  } else {\r\n      return findLowerLevel(obj.input, variables)\r\n  }\r\n}\r\n\r\nasync function mutateQuery(query) {\r\n  const translation = translate(query);\r\n  const {bgp, variables} = findLowerLevel(translation, translation.variables)\r\n  const usedVariables = new Set()\r\n  let aliasNumber = 1\r\n  let aliases = {}\r\n  for (const pattern of bgp.patterns) {\r\n      for (const item of Object.keys(pattern)) {\r\n       if (pattern[item].termType === \"Variable\") {\r\n          if (usedVariables.has(pattern[item])) {\r\n              const newVName = `${pattern[item].value}_alias${aliasNumber}`\r\n              if (!aliases[pattern[item].value]) aliases[pattern[item].value] = []\r\n\r\n              aliases[pattern[item].value].push(newVName)\r\n              aliasNumber += 1\r\n              const newV = {termType: \"Variable\", value: newVName}\r\n              pattern[item] = newV\r\n          }\r\n          usedVariables.add(pattern[item])\r\n       }\r\n         \r\n      }\r\n  }\r\n  Object.keys(aliases).forEach(item => {\r\n      aliases[item].forEach(alias => {\r\n          const newPattern = quad(\r\n              variable(item),\r\n              namedNode(\"http://www.w3.org/2002/07/owl#sameAs\"),\r\n              variable(alias),\r\n              defaultGraph()\r\n          )\r\n          bgp.patterns.push(newPattern)\r\n      })\r\n  })\r\n  const q = {type: \"project\", input: {type: \"bgp\", patterns: bgp.patterns}, variables: Array.from(usedVariables)}\r\n  return {query: toSparql(q), variables: Array.from(usedVariables)}\r\n}\r\n\r\n\r\nexport { extract, streamToString, query };\r\n"],"mappings":"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"}